:root {
    --green-board-colour: rgb(122, 148, 90);
    --green-light-square-colour: rgb(235, 236, 211);
    --brown-board-colour: rgb(174, 138, 104);
    --brown-light-square-colour: rgb(236, 218, 185);
    --board-square-width: min(5vw, 10vh);
    --board-colour: var(--brown-board-colour);
    --light-square-colour: var(--brown-light-square-colour);
    --move-indicator-colour: rgba(0, 0, 0, 0.2);
}

#eval-bar {
    font-weight: bold;
    text-align: center;
    grid-row: 2 / 3;
    grid-column: 1 / 2;
    float: left;
    width: 32px;
    height: calc(2 * (4*var(--board-square-width) - var(--padding)));
    padding: var(--padding) 0;
    margin: var(--margin);
    margin-right: 0;
    border: var(--border);
    border-radius: var(--box-radius);
    background-color: var(--contrast-background-colour);
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}
#chess-board, #piece-area {
    float: left;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}
#chess-board {
    display: grid;
    grid-template: repeat(8, var(--board-square-width)) / repeat(8, var(--board-square-width));
    grid-row: 2 / 3;
    grid-column: 2 / 3;
    overflow: hidden;
    position: relative;
    width: max-content;
    margin: var(--margin);
    border: var(--border);
    border-radius: var(--box-radius);
    box-shadow: calc(var(--board-square-width) / 12) calc(var(--board-square-width) / 6) calc(var(--board-square-width) / 6) var(--shadow-colour);
}
#piece-area {
    display: block;
    position: absolute;
    width: max-content;
    z-index: 3;
}
.board-square {
    overflow: hidden;
    position: relative;
    color: var(--light-square-colour);
    background-color: var(--board-colour);
    outline-offset: calc(var(--board-square-width) / -25);
}
.light-board-square {
    color: var(--board-colour);
    background-color: var(--light-square-colour);
}
.highlight-square {
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 0, 0.5);
    outline-offset: calc(var(--board-square-width) / -25);
    pointer-events: none;
}
.chess-piece {
    position: absolute;
    width: var(--board-square-width);
    height: var(--board-square-width);
}
#file-indicator, #rank-indicator {
    font-size: calc(var(--board-square-width) / 5);
    font-weight: bold;
    display: flex;
    position: absolute;
    z-index: 2;
    pointer-events: none;
}
#file-indicator {
    bottom: calc(var(--board-square-width) / 20);
}
#rank-indicator {
    flex-direction: column;
    top: calc(var(--board-square-width) / 20);
}
.file-name, .rank-name {
    color: var(--board-colour);
}
.file-name {
    width: var(--board-square-width);
}
.rank-name {
    height: var(--board-square-width);
}
.light-text-colour {
    color: var(--light-square-colour);
}
.move-indicator {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 30%;
    height: 30%;
    border-radius: 50%;
    opacity: 0;
    transform: translate(-50%, -50%);
    animation: fade-in 0.2s var(--emphasis-animation) forwards;
    transition: width 0.2s var(--emphasis-animation), height 0.2s var(--emphasis-animation);
    pointer-events: none;
}
.filled-circle {
    background-color: var(--move-indicator-colour);
}
.ring {
    width: 80%;
    height: 80%;
    border: calc(var(--board-square-width) / 10) solid var(--move-indicator-colour);
    background-color: transparent;
    box-shadow: inset 0 0 var(--move-indicator-colour);
    transition: box-shadow 0.2s var(--emphasis-animation);
}
.board-square:hover > .filled-circle {
    width: 50%;
    height: 50%;
}
.board-square:hover > .ring {
    width: 70%;
    height: 70%;
    box-shadow: inset 0 0 0 calc(var(--board-square-width) / 2) var(--move-indicator-colour);
}
.ripple {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    border-radius: 50%;
    animation: ripple-effect 0.5s ease-out;
}

@keyframes fade-in {
    from {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.5);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}
@keyframes fade-out {
    from {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
    to {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.5);
    }
}
@keyframes ripple-effect {
    0% {
        transform: scale(0.4);
        opacity: 0.5;
    }
    100% {
        transform: scale(2);
        opacity: 0;
    }
}
